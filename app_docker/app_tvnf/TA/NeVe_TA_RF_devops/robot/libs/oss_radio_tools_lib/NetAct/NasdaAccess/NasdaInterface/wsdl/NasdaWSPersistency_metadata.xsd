<?xml version="1.0" encoding="UTF-8"?>
<!--

Copyright (C) 2011 Nokia Siemens Networks

Permission to use, copy, modify, and distribute this software and its
documentation for any purpose, without fee, and without a written agreement
is hereby granted, provided that the above copyright notice and this
paragraph and the following two paragraphs appear in all copies.

IN NO EVENT SHALL COPYRIGHT HOLDERS BE LIABLE TO ANY PARTY FOR DIRECT,
INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING LOST
PROFITS, ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN
IF COPYRIGHT HOLDERS HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

COPYRIGHT HOLDERS SPECIFICALLY DISCLAIM ANY WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
PARTICULAR PURPOSE. THE SOFTWARE PROVIDED HEREUNDER IS ON AN "AS IS" BASIS,
AND COPYRIGHT HOLDERS HAVE NO OBLIGATIONS TO PROVIDE MAINTENANCE, SUPPORT,
UPDATES, ENHANCEMENTS, OR MODIFICATIONS.

-->
<xs:schema 
    xmlns:xs="http://www.w3.org/2001/XMLSchema" 
    targetNamespace="http://www.nsn.com/schemas/public/oss/nasda/ws-api/persistency/metadata" 
    elementFormDefault="qualified" 
    xmlns:tns="http://www.nsn.com/schemas/public/oss/nasda/ws-api/persistency/metadata">

    <xs:annotation>
    	<xs:documentation>This schema defines datatypes for object class metadata.</xs:documentation></xs:annotation>
    <xs:complexType name="PDef">
    	<xs:attribute name="name" type="xs:string" use="required"></xs:attribute>
    	<xs:attribute name="type" type="tns:ValueType" use="required"></xs:attribute>
    </xs:complexType>

    

    <xs:simpleType name="ValueType">
        <xs:annotation>
        	<xs:documentation>Represents an enumeration of supported datatypes for parameter values.

Parameter value must be compatible with datatype that is defined for it - in other words, standard marshalling and unmarshalling routine for the given type must succeed on parameter value without errors.</xs:documentation></xs:annotation>
        <xs:restriction base="xs:string">
    		<xs:enumeration value="Integer"></xs:enumeration>
    		<xs:enumeration value="String"></xs:enumeration>
    		<xs:enumeration value="Boolean"></xs:enumeration>
    		<xs:enumeration value="Long"></xs:enumeration>
    	</xs:restriction>
    </xs:simpleType>



    <xs:complexType name="ScalarListDef">
    	<xs:complexContent>
    		<xs:extension base="tns:ListDef">

    			<xs:attribute name="type" type="tns:ValueType" use="required"></xs:attribute>

    		</xs:extension>
    	</xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ParameterContainerDef" abstract="true">
        <xs:annotation>
        	<xs:documentation>An abstract type for grouping definitions of more elementary types.</xs:documentation>
        </xs:annotation>
        <xs:choice maxOccurs="unbounded" minOccurs="0">
    		<xs:element ref="tns:pDef"></xs:element>
    		<xs:element ref="tns:scalarListDef"></xs:element>
    		<xs:element ref="tns:structListDef"></xs:element>
    	</xs:choice>
    </xs:complexType>
    
    <xs:element name="pDef" type="tns:PDef"></xs:element>

    <xs:element name="scalarListDef" type="tns:ScalarListDef"></xs:element>

    <xs:complexType name="StructListDef">
    	<xs:complexContent>
    		<xs:extension base="tns:ListDef">
    			<xs:sequence maxOccurs="1" minOccurs="1">
    				<xs:element ref="tns:itemDef"></xs:element>
    			</xs:sequence>
    		</xs:extension>
    	</xs:complexContent>
    </xs:complexType>

    <xs:element name="structListDef" type="tns:StructListDef"></xs:element>

    <xs:complexType name="ItemDef">
    	<xs:sequence maxOccurs="unbounded" minOccurs="1">
    		<xs:element ref="tns:pDef" maxOccurs="unbounded" minOccurs="1"></xs:element>
    	</xs:sequence>
    </xs:complexType>
    
    <xs:element name="itemDef" type="tns:ItemDef"></xs:element>

    <xs:complexType name="ManagedObjectDef">
    	<xs:complexContent>
    		<xs:extension base="tns:ParameterContainerDef">
    			<xs:attribute ref="tns:metaClass" use="required"></xs:attribute>
    			<xs:attribute ref="tns:metaVersion" use="required"></xs:attribute>
    		</xs:extension>
    	</xs:complexContent>
    </xs:complexType>

    <xs:attribute name="metaClass" type="xs:string">
    	<xs:annotation>
    		<xs:documentation>Identification of metadata class. 

Notice that in adaptation-enabled products, metadata class is identified using qualified class abbreviations, i.e. &lt;adaptationId&gt;:&lt;classAbbreviation&gt;.</xs:documentation>
    	</xs:annotation></xs:attribute>

    <xs:attribute name="metaVersion" type="xs:string">
    	<xs:annotation>
    		<xs:documentation>Identification of metadata version (release).</xs:documentation>
    	</xs:annotation></xs:attribute>

    <xs:element name="managedObjectDef" type="tns:ManagedObjectDef"></xs:element>

    <xs:element name="managedObjectDefs" type="tns:ManagedObjectDefs"></xs:element>
    
    <xs:complexType name="ManagedObjectDefs">
        <xs:annotation>
        	<xs:documentation>Represents a collection of ManagedObjectDef.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
    		<xs:element ref="tns:managedObjectDef" maxOccurs="unbounded" minOccurs="0"></xs:element>
    	</xs:sequence>
    </xs:complexType>

    <xs:complexType name="RelationshipDef">
    	<xs:annotation>
    		<xs:documentation>
    			Represents a definition of a relationship.
    		</xs:documentation>
    	</xs:annotation>
        <xs:attribute ref="tns:relationshipId"></xs:attribute>
        <xs:attribute name="sourceMetaClass" type="xs:string"
    		use="optional">
    		<xs:annotation>
    			<xs:documentation>
    				Metadata class of the relationship source object or
    				none if source object for this relationship is not
    				required to be of a particular (single) class.
    			</xs:documentation>
    		</xs:annotation>
    	</xs:attribute>
    	<xs:attribute name="targetMetaClass" type="xs:string"
    		use="optional">
    		<xs:annotation>
    			<xs:documentation>
    				Metadata class of the relationship target object or
    				none if target object for this relationship is not
    				required to be of a particular (single) class.
    			</xs:documentation>
    		</xs:annotation>
    	</xs:attribute>
    </xs:complexType>

    <xs:complexType name="RelationshipDefs">
        <xs:annotation>
        	<xs:documentation>Represents a collection of RelationshipDef.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
    		<xs:element ref="tns:relationshipDef" maxOccurs="unbounded" minOccurs="0"></xs:element>
    	</xs:sequence>
    </xs:complexType>

    <xs:element name="relationshipDef" type="tns:RelationshipDef"></xs:element>

    <xs:element name="relationshipDefs" type="tns:RelationshipDefs"></xs:element>

    <xs:complexType name="ListDef" abstract="true">
        <xs:annotation>
        	<xs:documentation>Abstract type with metadata attributes shared by all list types.</xs:documentation>
        </xs:annotation>
        <xs:attribute name="name" type="xs:string" use="required"></xs:attribute>
    </xs:complexType>

    <xs:simpleType name="RelationshipId">
        <xs:annotation>
        	<xs:documentation>Identification of relationship definition. A client shall not make any assumptions about particular semantics and/or structure of the value.</xs:documentation></xs:annotation>
        <xs:restriction base="xs:string"></xs:restriction>
    </xs:simpleType>

    <xs:attribute name="relationshipId" type="tns:RelationshipId"></xs:attribute>
</xs:schema>